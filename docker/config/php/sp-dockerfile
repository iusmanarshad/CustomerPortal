ARG VERSION_PHP="8.1-fpm-alpine"

FROM php:${VERSION_PHP}

# Installing Composer
COPY --from=composer /usr/bin/composer /usr/bin/composer

## Install Dependencies & extensions
## www-data UID is 33 in Ubuntu/Debian & 82 in Alpine. UID 33 is xfs in Alpine
RUN apk update \
    && apk add --no-cache --repository https://dl-cdn.alpinelinux.org/alpine/edge/main/ \
    && apk add --no-cache -U \
    build-base \
    shadow \
    libzip-dev \
    libpng-dev \
    libjpeg-turbo-dev \
    libpq-dev \
    freetype-dev \
    oniguruma-dev \
    openssl-dev \
    autoconf \
    curl \
    zip \
    unzip \
    bash \
    nano \
    nodejs \
    npm \
    py3-pip \
    sqlite \
    gnupg \
    git \
    libstdc++ \
    gcompat \
    && pecl install redis \
    && docker-php-ext-enable redis \
    && docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ \
    && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \
    && docker-php-ext-install gd bcmath opcache pdo pdo_mysql pdo_pgsql pgsql zip exif pcntl \
    && pecl install mongodb \
    && docker-php-ext-enable mongodb \
    && apk update \
    && usermod -u 1000 www-data \
    && addgroup www-data xfs \
    && chown -R root:root /var/www

USER root

# Install virtual environment tools
RUN apk add --no-cache py3-virtualenv

# Create and activate a virtual environment
RUN python3 -m venv /venv
ENV PATH="/venv/bin:$PATH"
RUN source /venv/bin/activate

# Install Supervisor using pip inside the virtual environment
RUN pip install supervisor

# Deactivate the virtual environment
RUN exec /bin/sh -c "source /venv/bin/activate && deactivate"
# RUN /venv/bin/activate && deactivate

RUN echo user=root

CMD ["php-fpm"]
